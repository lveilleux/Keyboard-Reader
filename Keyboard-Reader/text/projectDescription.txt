For my final project, I am going to be building an application that will take in some sort of text from a given file, into a C++ application that I'd designe to work specifically for keyboards that have and support individual lighting of keys with each key having its own LED. The program will take in the text in the file, and go word by word flashing the letters of each word onto the keyboard. This will be done on either the keyboard on my desktop or laptop which use 3rd party libraries, namely the Razer Chroma SDK, to make this possible. I have a small amount of work with the SDK already so getting this program up and running shouldn’t be a monster task.

The idea behind this is a different way for users to read and in a sense, interact with a text file or web page. This goes back to what Bootz was talking about with making the users work to read the entire piece in the same way that the user must pay attention to the keyboard not the screen to get the text from the source. In class, we often come back to the idea of pieces that change as they go and can only be read once before deleting themselves, like Taroko Gorge or Agrippa, while this program will be the same every time, if run with the same given inputs, there is no way to go back and reread the last line of the program as each work flashes just long enough for the reader to understand the word, before disappearing for the next word to appear.

For the plan of attack, I plan on getting the base program working by Thanksgiving breaks (~11/22) with refinements and additions added to it as I go, hopefully with the ability to pull from a webpage with the help of some web crawling programs, but I’m not sure how much work that would require and if it’s feasible to do in the time I have, I would like to have this portion of the program figured out if it’s a go/no go by the 15th giving me plenty of time to work out the bugs and program implementation.